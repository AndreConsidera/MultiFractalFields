name: CI
on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.9'
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          files: lcov.info
      #- uses: julia-actions/julia-uploadcoveralls@v1
      #  env:
      #    COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
      #- name: Julia TagBot
      #  uses: JuliaRegistries/TagBot@v1.10.0
  docs:
      name: Documentation
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: julia-actions/setup-julia@v1
          with:
            version: '1'
        - run: |
            julia --project=docs -e '
              using Pkg
              Pkg.add("Documenter") 
              Pkg.develop(PackageSpec(path=pwd()))
              Pkg.instantiate()'
        - run: |
            julia --project=docs -e '
              using Documenter: doctest
              using MultiFractalFields
              doctest(MultiFractalFields)' # change MYPACKAGE to the name of your package
        - run: julia --project=docs docs/make.jl
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}